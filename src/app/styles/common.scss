@import "config";
// 公共配置
// 1.主题定义
$theme-default: (
    color: $color-white,
    font-size: $font-sm,
    background: $color-theme,
);


$theme-blue: (
    font-color: $color-white,
    font-size: $font-sm,
    background: #1976d2, // 仅为测试
);

//  2.将定义好到主题添加到map中
$themes:(
    default:$theme-default,
    blue:$theme-blue,
);

$theme-map: ();

// 3.定义混合指令, 切换主题,并将主题中到所有规则添加到theme-map中
@mixin themify() {
    @each $theme-name, $map in $themes {
        // & 表示父级元素
        // !global 表示覆盖原来的
        .theme-#{$theme-name} & {
            $theme-map: ();
            // 循环合并键值对
            @each $key, $value in $map {
                $theme-map: map-merge($theme-map, ($key: $value)) !global;
            }
            // 表示包含 下面函数 themed()
            @content;
            $theme-map: null !global;
        }
    }
}

// 4. 调用混合指令themify() ,定义规则,此处到规则会替换@content
@mixin mytheme() {
    @include themify() {
        color: themed("font-color");
        font-size: themed("font-size");
        background: themed("background");
        .toolbar {
            background: themed("background");
        }
    }
};

// 通过key获取map中到值
@function themed($key) {
    @return map-get($theme-map, $key);
}

@mixin bg_color() {
    :host-context([data-theme='blue']) & {
        background-color: map-get($theme-blue, "background");
    }
    :host-context([data-theme='default']) & {
        background-color: $color-theme;
    }
}


// 公共类
.flex-row {
    display: -webkit-box;
    display: flex;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: -moz-flex;
    -ms-flex-direction: row;
    -webkit-flex-direction: row;
    flex-direction: row;
}

.flex-column {
    display: flex;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: -moz-flex;
    -ms-flex-direction: column;
    -webkit-flex-direction: column;
    flex-direction: column;
}

.flex1 {
    flex: 1;
}

.align-center {
    align-items: center;
}

.align-flex-end {
    align-items: flex-end;
}

.justify-center {
    justify-content: center;
}

.space-between {
    justify-content: space-between;
}

.space-around {
    justify-content: space-around;
}

.space-evenly {
    justify-content: space-evenly;
}

.space-end {
    justify-content: end;
}

.stretch {
    align-items: stretch;
}

.flex-shrink {
    flex-shrink: 0;
}

.flex-end {
    justify-content: flex-end;
}

.flex-wrap {
    -webkit-flex-wrap: wrap;
    -moz-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
}

.relative {
    position: relative;
}

/* 文字颜色 大小 */
.font-color-base {
    color: $color-base;
}

.font-color-grey {
    color: $color-gray;
}

.font-color-red {
    color: $color-error;
}

.font-color-theme {
    color: $color-theme;
}

.font-color-white {
    color: $color-white;
}

.font-color-light {
    color: $color-light;
}


.font-xs {
    font-size: $font-xs;
}

.font-sm {
    font-size: $font-sm;
}

.font-base {
    font-size: $font-base;
}

.font-lg {
    font-size: $font-lg;
}

.underline {
    text-decoration: underline;
}

.bg-white {
    background-color: #fff;
}

.bold {
    font-weight: bold;
}
// sass
$type-map: ("m": 'margin', "p": 'padding');
$position-map: ("l": 'left', "r": 'right', "b": 'bottom', 't': 'top');
$list: 10, 15, 20, 25, 30, 40; //


@each $v in $list {
    @each $t in m, p {
        @each $p in '', l, r, b, t{
            @if (#{$p} != '') {
                // 这里不能像js一样 写 @if (#{$p})
                .#{$t + $p + $v} {
                    #{map-get($type-map, $t) + '-' + map-get($position-map, $p)}:$v + px;
                }
            } @else {
                .#{$t + $v} {
                     #{map-get($type-map, $t)}:$v + px;
                }
            }
        }
    }
}

// 普通实现
/*
.m20{
  margin: 20px;
}
.ml20{
  margin-left: 20px;
}
.mr20{
  margin-right: 20px;
}
.mt20{
  margin-top: 20px;
}
.mb20{
  margin-bottom: 20px;
}

.m15{
  margin: 15px;
}
.ml15{
  margin-left: 15px;
}
.mr15{
  margin-right: 15px;
}
.mt15{
  margin-top: 15px;
}
.mb15{
  margin-bottom: 15px;
}


.m10{
  margin: 10px;
}
.ml10{
  margin-left: 10px;
}
.mr10{
  margin-right: 10px;
}
.mt10{
  margin-top: 10px;
}
.mb10{
  margin-bottom: 10px;
}

.m40{
  margin: 40px;
}
.ml40{
  margin-left: 40px;
}
.mr40{
  margin-right: 40px;
}
.mt40{
  margin-top: 40px;
}
.mb40{
  margin-bottom: 40px;
}

.m30{
  margin: 30px;
}
.ml30{
  margin-left: 30px;
}
.mr30{
  margin-right: 30px;
}
.mt30{
  margin-top: 30px;
}
.mb30{
  margin-bottom: 30px;
}

.p20{
  padding: 20px;
}
.pl20{
  padding-left: 20px;
}
.pr20{
  padding-right: 20px;
}
.pt20{
  padding-top: 20px;
}
.pb20{
  padding-bottom: 20px;
}

.p15{
  padding: 15px;
}
.pl15{
  padding-left: 15px;
}
.pr15{
  padding-right: 15px;
}
.pt15{
  padding-top: 15px;
}
.pb15{
  padding-bottom: 15px;
}


.p10{
  padding: 10px;
}
.pl10{
  padding-left: 10px;
}
.pr10{
  padding-right: 10px;
}
.pt10{
  padding-top: 10px;
}
.pb10{
  padding-bottom: 10px;
}

.p30{
  padding: 30px;
}
.pl30{
  padding-left: 30px;
}
.pr30{
  padding-right: 30px;
}
.pt30{
  padding-top: 30px;
}
.pb30{
  padding-bottom: 30px;
}

.p40{
  padding: 40px;
}
.pl40{
  padding-left: 40px;
}
.pr40{
  padding-right: 40px;
}
.pt40{
  padding-top: 40px;
}
.pb40{
  padding-bottom: 40px;
}
*/

/* button */
//button[type=blue] {
//    color: #fff;
//    //background-color: $uni-color-primary;
//}

